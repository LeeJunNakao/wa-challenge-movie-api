name: Deploy base

on:
  push:
    branches: ["main"]

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      ACCOUNT_ID:  ${{  secrets.AWS_ACCOUNT_ID }}
      AWS_REGION: us-east-1
      AWS_ACCESS_KEY_ID: ${{  secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      CLUSTER: wa-movie-api
      ECS_SERVICE: wa-movie-api-service
      IMAGE_NAME: wa-movie-api
      AWS_SECRET_ACCESS_KEY: ${{ secrets.HOST }}
    steps:
      - uses: actions/checkout@v3

      - name: Install ecs-deploy
        run: |
          curl https://raw.githubusercontent.com/silinternational/ecs-deploy/master/ecs-deploy | tee /tmp/ecs-deploy
          chmod +x /tmp/ecs-deploy
      - name: Install AWS CLI if not already installed
        run: |
          if [ "$(which aws)" == "" ]; then
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "/tmp/awscliv2.zip"
            unzip /tmp/awscliv2.zip -d /tmp
            /tmp/aws/install
          fi
      - name: Authenticate with ECR
        run: aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin "$ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com"

      - name: Set image name
        run: echo "ECR_NEW_IMAGE=$ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$IMAGE_NAME" >> $GITHUB_ENV

      - name: Build image
        run: |
          docker build -t $ECR_NEW_IMAGE:$GITHUB_SHA .
          docker tag $ECR_NEW_IMAGE:$GITHUB_SHA $ECR_NEW_IMAGE:latest
      - name: Push image
        run: |
          docker push $ECR_NEW_IMAGE:$GITHUB_SHA
          docker push $ECR_NEW_IMAGE:latest
      - name: Deploy to ECS
        run: /tmp/ecs-deploy -c $CLUSTER -n $ECS_SERVICE -i $ECR_NEW_IMAGE:$GITHUB_SHA -r $AWS_REGION -t 600 --max-definitions 3 --enable-rollback --verbose